import 'package:cloud_firestore/cloud_firestore.dart';

/// Status of a family invitation
enum InvitationStatus {
  pending('pending'),
  consumed('consumed'),
  revoked('revoked'),
  expired('expired');

  const InvitationStatus(this.value);
  final String value;

  static InvitationStatus fromString(String value) {
    return InvitationStatus.values.firstWhere(
      (status) => status.value == value,
      orElse: () => InvitationStatus.pending,
    );
  }

  /// Get display name for the status in Russian
  String get displayName {
    switch (this) {
      case InvitationStatus.pending:
        return '–û–∂–∏–¥–∞–µ—Ç –ø—Ä–∏–Ω—è—Ç–∏—è';
      case InvitationStatus.consumed:
        return '–ü—Ä–∏–Ω—è—Ç–æ';
      case InvitationStatus.revoked:
        return '–û—Ç–º–µ–Ω–µ–Ω–æ';
      case InvitationStatus.expired:
        return '–ò—Å—Ç–µ–∫–ª–æ';
    }
  }

  /// Check if invitation is still active
  bool get isActive => this == InvitationStatus.pending;

  /// Check if invitation is finished (cannot be used)
  bool get isFinished => this != InvitationStatus.pending;
}

class InvitationModel {
  final String id;
  final String apartmentId;
  final String blockId;
  final String apartmentNumber;
  final String ownerName;
  final String ownerPhone;
  final String? ownerPassport;
  final DateTime createdAt;
  final DateTime expiresAt;
  final bool isActive;
  final int maxUses;
  final int currentUses;
  final List<String> usedBy; // –°–ø–∏—Å–æ–∫ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ –∏–Ω–≤–∞–π—Ç
  final String? customMessage;

  InvitationModel({
    required this.id,
    required this.apartmentId,
    required this.blockId,
    required this.apartmentNumber,
    required this.ownerName,
    required this.ownerPhone,
    this.ownerPassport,
    required this.createdAt,
    required this.expiresAt,
    required this.isActive,
    required this.maxUses,
    required this.currentUses,
    required this.usedBy,
    this.customMessage,
  });

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–Ω–æ –ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏–Ω–≤–∞–π—Ç
  bool get canBeUsed => 
    isActive && 
    DateTime.now().isBefore(expiresAt) && 
    currentUses < maxUses;

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –ª–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —ç—Ç–æ—Ç –∏–Ω–≤–∞–π—Ç
  bool hasBeenUsedBy(String phone) => usedBy.contains(phone);

  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–æ—Ä–æ—Ç–∫–∏–π –∫–æ–¥ –¥–ª—è —Å—Å—ã–ª–∫–∏
  String get shortCode => id.substring(0, 8).toUpperCase();

  // –°–æ–∑–¥–∞–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è –∏–Ω–≤–∞–π—Ç–∞
  String get inviteLink => 'newport://invite/$id';

  // –°–æ–∑–¥–∞–µ–º –≤–µ–±-—Å—Å—ã–ª–∫—É (–¥–ª—è fallback)
  String get webInviteLink => 'https://newport-resident.com/invite/$id';

  Map<String, dynamic> toJson() {
    return {
      'id': id,
      'apartmentId': apartmentId,
      'blockId': blockId,
      'apartmentNumber': apartmentNumber,
      'ownerName': ownerName,
      'ownerPhone': ownerPhone,
      'ownerPassport': ownerPassport,
      'createdAt': createdAt.toIso8601String(),
      'expiresAt': expiresAt.toIso8601String(),
      'isActive': isActive,
      'maxUses': maxUses,
      'currentUses': currentUses,
      'usedBy': usedBy,
      'customMessage': customMessage,
    };
  }

  factory InvitationModel.fromJson(Map<String, dynamic> json) {
    return InvitationModel(
      id: json['id'],
      apartmentId: json['apartmentId'],
      blockId: json['blockId'],
      apartmentNumber: json['apartmentNumber'],
      ownerName: json['ownerName'],
      ownerPhone: json['ownerPhone'],
      ownerPassport: json['ownerPassport'],
      createdAt: DateTime.parse(json['createdAt']),
      expiresAt: DateTime.parse(json['expiresAt']),
      isActive: json['isActive'] ?? true,
      maxUses: json['maxUses'] ?? 5,
      currentUses: json['currentUses'] ?? 0,
      usedBy: List<String>.from(json['usedBy'] ?? []),
      customMessage: json['customMessage'],
    );
  }

  factory InvitationModel.fromFirestore(DocumentSnapshot doc) {
    final data = doc.data() as Map<String, dynamic>;
    return InvitationModel.fromJson({
      ...data,
      'id': doc.id,
    });
  }

  InvitationModel copyWith({
    String? id,
    String? apartmentId,
    String? blockId,
    String? apartmentNumber,
    String? ownerName,
    String? ownerPhone,
    String? ownerPassport,
    DateTime? createdAt,
    DateTime? expiresAt,
    bool? isActive,
    int? maxUses,
    int? currentUses,
    List<String>? usedBy,
    String? customMessage,
  }) {
    return InvitationModel(
      id: id ?? this.id,
      apartmentId: apartmentId ?? this.apartmentId,
      blockId: blockId ?? this.blockId,
      apartmentNumber: apartmentNumber ?? this.apartmentNumber,
      ownerName: ownerName ?? this.ownerName,
      ownerPhone: ownerPhone ?? this.ownerPhone,
      ownerPassport: ownerPassport ?? this.ownerPassport,
      createdAt: createdAt ?? this.createdAt,
      expiresAt: expiresAt ?? this.expiresAt,
      isActive: isActive ?? this.isActive,
      maxUses: maxUses ?? this.maxUses,
      currentUses: currentUses ?? this.currentUses,
      usedBy: usedBy ?? this.usedBy,
      customMessage: customMessage ?? this.customMessage,
    );
  }

  /// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç deep link –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  String generateDeepLink() {
    return 'newport://invite/$id';
  }

  /// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –≤–µ–±-—Å—Å—ã–ª–∫—É —Å fallback
  String generateWebLink() {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º GitHub Pages –¥–ª—è —Ö–æ—Å—Ç–∏–Ω–≥–∞
    return 'https://saizentm1.github.io/newportfamily/?invite=$id';
  }

  /// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –¥–ª—è —à–∞—Ä–∏–Ω–≥–∞ (—Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º fallback)
  String generateShareableLink() {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º GitHub Pages –¥–ª—è —Ö–æ—Å—Ç–∏–Ω–≥–∞
    return 'https://saizentm1.github.io/newportfamily/?invite=$id';
  }

  /// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç –¥–ª—è —à–∞—Ä–∏–Ω–≥–∞
  String generateShareText() {
    return '''
üè† –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ Newport

–í–∞—Å –ø—Ä–∏–≥–ª–∞—à–∞–µ—Ç: $ownerName
–ê–¥—Ä–µ—Å: $blockId, –∫–≤–∞—Ä—Ç–∏—Ä–∞ $apartmentNumber
–¢–µ–ª–µ—Ñ–æ–Ω: $ownerPhone

${customMessage ?? '–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞—à–µ–π —Å–µ–º—å–µ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ Newport!'}

–°—Å—ã–ª–∫–∞ –¥–ª—è –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è:
${generateShareableLink()}

–ï—Å–ª–∏ —É –≤–∞—Å –Ω–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –æ–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç –µ–≥–æ —Å–∫–∞—á–∞—Ç—å.
    '''.trim();
  }
} 