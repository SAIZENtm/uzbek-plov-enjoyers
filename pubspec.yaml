name: newport_resident
description: "A new Flutter project."
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.0.0
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: '>=3.4.1 <4.0.0'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter
  flutter_localizations:
    sdk: flutter


  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.6
  connectivity_plus: ^5.0.2
  dio: ^5.4.1
  shared_preferences: ^2.2.2
  flutter_svg: ^2.0.10+1
  get_it: ^7.6.7
  provider: ^6.1.2
  encrypt: ^5.0.3
  flutter_secure_storage: ^9.0.0
  hive: ^2.2.3
  path_provider: ^2.1.2
  logger: ^2.2.0
  # Real IoT Platform Integrations
  firebase_database: ^11.1.4
  network_info_plus: ^6.0.0
  wifi_scan: ^0.4.1
  # Tuya Cloud API integration
  oauth2: ^2.0.2
  crypto: ^3.0.5
  # HTTP client for REST APIs
  http: ^1.2.1
  cached_network_image: ^3.3.1
  # WebSocket for real-time updates
  web_socket_channel: ^3.0.1
  sizer: ^2.0.15
  firebase_core: ^3.15.1
  firebase_auth: ^5.3.3
  cloud_firestore: ^5.4.4
  firebase_storage: ^12.3.2
  firebase_analytics: ^11.3.3
  firebase_crashlytics: ^4.1.3
  google_fonts: ^6.2.1
  intl: ^0.20.2
  flutter_staggered_animations: ^1.1.1

  # Added back missing dependencies
  google_maps_flutter: ^2.6.1
  firebase_performance: ^0.10.0
  fl_chart: ^0.68.0
  excel: ^2.1.0
  awesome_notifications: ^0.10.1

  # News module dependencies
  firebase_messaging: ^15.0.0
  cloud_functions: ^5.6.1
  go_router: ^13.0.0
  badges: ^3.1.1
  markdown_widget: ^2.3.1
  url_launcher: ^6.2.4
  qr_flutter: ^4.1.0
  share_plus: ^11.0.0
  app_links: ^6.4.0
  image_picker: ^1.0.7
  path: any
  uuid: any
  collection: any
dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is

  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^3.0.0
  mockito: ^5.4.4
  build_runner: ^2.4.9
  hive_generator: ^2.0.1
  json_serializable: ^6.7.1
  
  # Testing dependencies
  golden_toolkit: ^0.15.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/images/

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  fonts:
    - family: Aeroport
      fonts:
        - asset: assets/fonts/AEROPORT.TTF
        - asset: assets/fonts/AEROPORT-LIGHT.TTF
          weight: 300
        - asset: assets/fonts/AEROPORT-MEDIUM.TTF
          weight: 500
        - asset: assets/fonts/AEROPORT-BOLD.TTF
          weight: 700
        - asset: assets/fonts/AEROPORT-BLACK.OTF
          weight: 900
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
