const admin = require('firebase-admin');

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Firebase Admin SDK
const serviceAccount = require('./functions/newport-23a19-firebase-adminsdk-jglbo-8b0d0de19e.json');
admin.initializeApp({
  credential: admin.credential.cert(serviceAccount)
});

const db = admin.firestore();

async function testFCMSystem() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã FCM —Ç–æ–∫–µ–Ω–æ–≤ –∏ push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π');
  console.log('=' .repeat(60));

  // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ fcm_tokens
  console.log('\n1. üì± –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–ª–µ–∫—Ü–∏—é fcm_tokens:');
  const fcmTokensSnapshot = await db.collection('fcm_tokens').get();
  console.log(`   –ù–∞–π–¥–µ–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: ${fcmTokensSnapshot.size}`);
  
  fcmTokensSnapshot.forEach(doc => {
    const data = doc.data();
    console.log(`   üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${doc.id}`);
    console.log(`   üë§ –ü–∞—Å–ø–æ—Ä—Ç: ${data.passportNumber}`);
    console.log(`   üè† –ö–≤–∞—Ä—Ç–∏—Ä–∞: ${data.apartmentNumber} (–±–ª–æ–∫ ${data.blockId})`);
    console.log(`   üîë FCM —Ç–æ–∫–µ–Ω–æ–≤: ${data.tokens?.length || 0}`);
    if (data.tokens?.length > 0) {
      console.log(`   üì± –ü–æ—Å–ª–µ–¥–Ω–∏–π —Ç–æ–∫–µ–Ω: ${data.tokens[data.tokens.length - 1].substring(0, 30)}...`);
    }
    console.log('   ---');
  });

  // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Å—Ç–∞—Ä–æ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏ users
  console.log('\n2. üë• –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–ª–µ–∫—Ü–∏—é users:');
  const usersSnapshot = await db.collection('users').get();
  console.log(`   –ù–∞–π–¥–µ–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: ${usersSnapshot.size}`);
  
  let usersWithTokens = 0;
  usersSnapshot.forEach(doc => {
    const data = doc.data();
    if (data.fcmTokens && data.fcmTokens.length > 0) {
      usersWithTokens++;
      console.log(`   üë§ ${doc.id}: ${data.fcmTokens.length} —Ç–æ–∫–µ–Ω(–æ–≤)`);
      console.log(`   üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${data.phone}`);
      console.log(`   üè† –ö–≤–∞—Ä—Ç–∏—Ä–∞: ${data.apartmentNumber} (–±–ª–æ–∫ ${data.blockId})`);
    }
  });
  console.log(`   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å FCM —Ç–æ–∫–µ–Ω–∞–º–∏: ${usersWithTokens}`);

  // 3. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
  console.log('\n3. üîî –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ:');
  
  // –ë–µ—Ä–µ–º –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å FCM —Ç–æ–∫–µ–Ω–∞–º–∏
  let testUserId = null;
  const firstUserWithTokens = usersSnapshot.docs.find(doc => {
    const data = doc.data();
    return data.fcmTokens && data.fcmTokens.length > 0;
  });
  
  if (firstUserWithTokens) {
    testUserId = firstUserWithTokens.id;
    console.log(`   –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º: ${testUserId}`);
    
    const testNotificationId = `test_fcm_${Date.now()}`;
    const testNotification = {
      id: testNotificationId,
      userId: testUserId,
      title: 'üß™ –¢–µ—Å—Ç FCM —Å–∏—Å—Ç–µ–º—ã',
      message: '–ï—Å–ª–∏ –≤—ã –≤–∏–¥–∏—Ç–µ —ç—Ç–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, –∑–Ω–∞—á–∏—Ç —Å–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!',
      type: 'system_test',
      createdAt: new Date().toISOString(),
      readAt: null,
      isRead: false,
      data: {
        test: true,
        timestamp: Date.now(),
        testPhase: 'fcm_system_verification'
      },
      relatedRequestId: null,
      adminName: '–°–∏—Å—Ç–µ–º–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è FCM',
      imageUrl: null
    };

    // –°–æ–∑–¥–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ - —ç—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø—É—Å—Ç–∏—Ç Cloud Function
    await db.collection('notifications').doc(testNotificationId).set(testNotification);
    console.log(`   ‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ: ${testNotificationId}`);
    console.log(`   ‚è≥ –û–∂–∏–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫–∏ Cloud Function...`);
    
    // –ñ–¥–µ–º 3 —Å–µ–∫—É–Ω–¥—ã –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    await new Promise(resolve => setTimeout(resolve, 3000));
    
    const notificationDoc = await db.collection('notifications').doc(testNotificationId).get();
    const notificationData = notificationDoc.data();
    
    console.log('\n   üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ push:');
    console.log(`   Push –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω: ${notificationData.pushSent ? '‚úÖ –î–ê' : '‚ùå –ù–ï–¢'}`);
    if (notificationData.pushSent) {
      console.log(`   –£—Å–ø–µ—à–Ω–æ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ: ${notificationData.pushSuccessCount || 0}`);
      console.log(`   –ù–µ—É–¥–∞—á–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫: ${notificationData.pushFailureCount || 0}`);
      console.log(`   –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ —Ç–æ–∫–µ–Ω–æ–≤: ${notificationData.pushTokensUsed || 0}`);
    } else {
      console.log(`   –û—à–∏–±–∫–∞: ${notificationData.pushError || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`);
      console.log(`   –ü—Ä–∏—á–∏–Ω–∞: ${notificationData.noTokensReason || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}`);
    }
  } else {
    console.log('   ‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å FCM —Ç–æ–∫–µ–Ω–∞–º–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
  }

  // 4. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
  console.log('\n4. üìà –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:');
  const notificationsSnapshot = await db.collection('notifications').get();
  console.log(`   –í—Å–µ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: ${notificationsSnapshot.size}`);
  
  let sentPushes = 0;
  let failedPushes = 0;
  notificationsSnapshot.forEach(doc => {
    const data = doc.data();
    if (data.pushSent === true) sentPushes++;
    if (data.pushSent === false) failedPushes++;
  });
  
  console.log(`   –£—Å–ø–µ—à–Ω—ã—Ö push: ${sentPushes}`);
  console.log(`   –ù–µ—É–¥–∞—á–Ω—ã—Ö push: ${failedPushes}`);
  console.log(`   –ë–µ–∑ push –¥–∞–Ω–Ω—ã—Ö: ${notificationsSnapshot.size - sentPushes - failedPushes}`);

  console.log('\n' + '=' .repeat(60));
  console.log('üéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –Ω—É–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å
  console.log('\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:');
  if (fcmTokensSnapshot.size === 0) {
    console.log('‚ùó –í –∫–æ–ª–ª–µ–∫—Ü–∏–∏ fcm_tokens –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö. –í–æ–π–¥–∏—Ç–µ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–Ω–æ–≤–æ.');
  }
  if (usersWithTokens === 0) {
    console.log('‚ùó –í –∫–æ–ª–ª–µ–∫—Ü–∏–∏ users –Ω–µ—Ç FCM —Ç–æ–∫–µ–Ω–æ–≤. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–æ–≤.');
  }
  if (fcmTokensSnapshot.size > 0 && usersWithTokens > 0) {
    console.log('‚úÖ FCM —Ç–æ–∫–µ–Ω—ã –Ω–∞–π–¥–µ–Ω—ã –≤ –æ–±–µ–∏—Ö –∫–æ–ª–ª–µ–∫—Ü–∏—è—Ö. –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ.');
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testFCMSystem()
  .then(() => {
    console.log('\nüèÅ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ');
    process.exit(0);
  })
  .catch(error => {
    console.error('\nüí• –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error);
    process.exit(1);
  }); 