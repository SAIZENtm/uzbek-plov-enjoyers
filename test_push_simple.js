// –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —á–µ—Ä–µ–∑ —É–∂–µ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—É—é Cloud Function
const https = require('https');

async function testPushNotification() {
  try {
    console.log('üöÄ –¢–µ—Å—Ç–∏—Ä—É–µ–º push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è...');
    
    // –î–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    const notificationData = {
      userId: 'AA2807040', // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä –ø–∞—Å–ø–æ—Ä—Ç–∞
      title: '–¢–µ—Å—Ç push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è',
      message: '–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º—ã!',
      type: 'system',
      adminName: '–¢–µ—Å—Ç –ê–¥–º–∏–Ω'
    };

    // URL Cloud Function –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    const url = 'https://us-central1-newport-23a19.cloudfunctions.net/createNotification';
    
    const postData = JSON.stringify(notificationData);
    
    const options = {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Content-Length': Buffer.byteLength(postData)
      }
    };

    console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞:', url);
    console.log('üìã –î–∞–Ω–Ω—ã–µ:', notificationData);

    return new Promise((resolve, reject) => {
      const req = https.request(url, options, (res) => {
        let data = '';
        
        res.on('data', (chunk) => {
          data += chunk;
        });
        
        res.on('end', () => {
          console.log('üì® –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞:', res.statusCode);
          console.log('üìÑ –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', data);
          
          if (res.statusCode === 200) {
            console.log('‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ!');
            console.log('üì± Push –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —á–µ—Ä–µ–∑ onNotificationCreate');
          } else {
            console.log('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è');
          }
          
          resolve();
        });
      });
      
      req.on('error', (error) => {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:', error);
        reject(error);
      });
      
      req.write(postData);
      req.end();
    });
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  }
}

console.log('üéØ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é:');
console.log('1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –≤–æ—à–ª–∏ –≤ –º–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ');
console.log('2. –ó–∞–º–µ–Ω–∏—Ç–µ userId –Ω–∞ –≤–∞—à –Ω–æ–º–µ—Ä –ø–∞—Å–ø–æ—Ä—Ç–∞');
console.log('3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: node test_push_simple.js');
console.log('4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ push –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–µ');
console.log('');

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testPushNotification().then(() => {
  console.log('üèÅ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω');
  
  console.log('');
  console.log('üîç –î–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ:');
  console.log('firebase functions:log --only onNotificationCreate');
}); 