// ignore_for_file: avoid_print

import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:firebase_core/firebase_core.dart';

// –ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã Firestore
void main() async {
  print('üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã Firestore...');
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
  await Firebase.initializeApp(
    options: const FirebaseOptions(
      apiKey: "dummy-key",
      authDomain: "newport-23a19.firebaseapp.com",
      projectId: "newport-23a19",
      storageBucket: "newport-23a19.appspot.com",
      messagingSenderId: "123456789",
      appId: "1:123456789:web:abcdef",
    ),
  );

  final firestore = FirebaseFirestore.instance;

  try {
    print('\nüìÅ –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–ª–µ–∫—Ü–∏—é "users"...');
    final usersSnapshot = await firestore.collection('users').limit(10).get();
    print('–ù–∞–π–¥–µ–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤ users: ${usersSnapshot.docs.length}');
    
    for (var doc in usersSnapshot.docs.take(3)) {
      print('\nüìã –î–æ–∫—É–º–µ–Ω—Ç: ${doc.id}');
      final data = doc.data();
      print('  apartment_number: ${data['apartment_number']}');
      print('  phone: ${data['phone']}');
      print('  full_name: ${data['full_name']}');
      print('  block_number: ${data['block_number']}');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–æ–ª–ª–µ–∫—Ü–∏–∏
      final subcollections = ['apartments'];
      for (var subcol in subcollections) {
        try {
          final subSnapshot = await doc.reference.collection(subcol).limit(3).get();
          if (subSnapshot.docs.isNotEmpty) {
            print('  –ü–æ–¥–∫–æ–ª–ª–µ–∫—Ü–∏—è "$subcol": ${subSnapshot.docs.length} –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤');
          }
        } catch (e) {
          // –ü–æ–¥–∫–æ–ª–ª–µ–∫—Ü–∏—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        }
      }
    }

    print('\nüîç –ü–æ–∏—Å–∫ —á–µ—Ä–µ–∑ collectionGroup("apartments")...');
    final apartmentsQuery = await firestore.collectionGroup('apartments').limit(5).get();
    print('–ù–∞–π–¥–µ–Ω–æ —á–µ—Ä–µ–∑ collectionGroup: ${apartmentsQuery.docs.length}');
    
    for (var doc in apartmentsQuery.docs.take(3)) {
      final data = doc.data();
      final blockId = doc.reference.parent.parent?.id ?? 'Unknown';
      print('  –ë–ª–æ–∫: $blockId, –ö–≤–∞—Ä—Ç–∏—Ä–∞: ${data['apartment_number']}, –¢–µ–ª–µ—Ñ–æ–Ω: ${data['phone']}');
    }

    print('\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:');
    print('  - –î–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ users: ${usersSnapshot.docs.length}');
    print('  - –ù–∞–π–¥–µ–Ω–æ —á–µ—Ä–µ–∑ collectionGroup apartments: ${apartmentsQuery.docs.length}');
    
    if (usersSnapshot.docs.isEmpty && apartmentsQuery.docs.isEmpty) {
      print('\n‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø—É—Å—Ç–∞—è –∏–ª–∏ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞!');
      print('   –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:');
      print('   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –≤ Firebase Console');
      print('   2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã');
    } else {
      print('\n‚úÖ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞.');
    }

  } catch (e) {
    print('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Firestore: $e');
    print('   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞');
  }
} 